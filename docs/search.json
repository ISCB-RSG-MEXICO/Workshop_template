[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Workshop",
    "section": "",
    "text": "Informaci√≥n general\n\n\nSobre el curso üìåRequisitos previosAgenda üìÜ\n\n\nFuente del curso\n\nFechas: Dias de la semana/ dias del mes\nDuraci√≥n del curso: X horas\n\nInstructores:\n\nEvelia Lorena Coss-Navarrete - PostDoc, LIIGH-UNAM. Pagina web\nAaron Espinosa Jaime - Estudiante de maestria, Cinvestav-LANGEBIO.\nAndr√©s Arredondo - Ciencias Agrogen√≥micas, CCM-UNAM.\n\nAyudantes:\n\nDaniel Ch√°vez - Profesor invitado, UAGro.\nCamilo P√©rez - Estudiante de doctorado, Cinvestav-LANGEBIO.\nAbel Lovaco Flores - Estudiante de maestria, Cinvestav-Irapuato.\nIsrael Aguilar - Posdoc, Tec de Monterrey.\nMariana Devon - Estudiante de maestr√≠a, UAM.\nAndr√©s Arredondo - Ciencias Agrogen√≥micas, CCM-UNAM.\n\nResumen:\nPara que es el curso, que se va abordar y que se espera que aprendan. Ejemplo:\nEste tutorial te ense√±ar√° los conceptos fundamentales en el empleo y manejo de Bash Shell, incluyendo¬†la creaci√≥n de scripts de Bash, generaci√≥n de programas con funcionalidades sencillas aplicables a bioinform√°tica y a programaci√≥n en general.\nObjetivos:\nEn esta gu√≠a r√°pida aprender√°s a:Daniel Ch√°vez - Profesor invitado, UAGro.\n\nCamilo P√©rez - Estudiante de doctorado, Cinvestav-LANGEBIO.\nAbel Lovaco Flores - Estudiante de maestria, Cinvestav-Irapuato.\nIsrael Aguilar - Posdoc, Tec de Monterrey.\nMariana Devon - Estudiante de maestr√≠a, UAM.\nAndr√©s Arredondo - Ciencias Agrogen√≥micas, CCM-UNAM.Crear y gestionar un repositorio.\nIniciar y administrar una nueva rama.\nRealizar cambios en un archivo y enviarlos a GitHub como confirmaci√≥n.\nCrear tu p√°gina de inicio en Github.\nCrear tu p√°gina web.\n\nCitar y reutilizar el material del curso\nLos datos del curso se pueden reutilizar y adaptar libremente con la debida atribuci√≥n. Todos los datos de los cursos de estos repositorios est√°n sujetos a la licencia Attribution-NonCommercial-ShareAlike 4.0 International (CC BY-NC-SA 4.0).\n\n\n\nDebes tener una cuenta de usuario de GitHub. Para m√°s informaci√≥n, consulta ‚ÄúCreaci√≥n de una cuenta en GitHub‚Äù.\nNo necesitas saber c√≥mo codificar, utilizar la l√≠nea de comandos o instalar Git (el software de control de versiones en el que est√° compilado GitHub).\nContar con una terminal con Git, en Windows puedes usar Git Bash.\n\n\n\n\n\n\n\n\n\n\nTema\nTiempo\n\n\n\n\nüî∑ Secci√≥n 1 - (11:30 - 13:30 h) (7 marzo)\n\n\n\n\nCreaci√≥n de una cuenta en GitHub\n\n5 min\n\n\n\nIntroducci√≥n a Git / GitHub\n\n15 min\n\n\n\nActividad 1: Sincronizaci√≥n y llaves\n\n15 min\n\n\n‚òï Coffee break (10 min) - (12:00-12:10) ‚òï\n10 min\n\n\nüî∑¬† Secci√≥n 2 - (12:10-13:00 h)\n\n\n\n\nComandos usados en Github y RStudio\n\n25 min\n\n\n\nActividad 2: Pagina de inicio en GitHub\n\n15 min\n\n\nüî∑¬† Secci√≥n 3 - (11:30 - 13:30 h) (14 marzo)\n\n\n\n\nBuenas practicas en R\n\n30 min\n\n\n\nActividad 3: Pagina web en GitHub\n\n1:30 min"
  },
  {
    "objectID": "Bash.html#preparaci√≥n-del-directorio-de-trabajo",
    "href": "Bash.html#preparaci√≥n-del-directorio-de-trabajo",
    "title": "1¬† Recordatorio de pasos en Bash",
    "section": "1.1 Preparaci√≥n del directorio de trabajo",
    "text": "1.1 Preparaci√≥n del directorio de trabajo\n\nRuta / Camino absoluto\ncd /home/usuario/data/\nRuta / Camino relativo\ncd ../ # Ir a la carpeta anterior"
  },
  {
    "objectID": "Bash.html#comandos-b√°sicos",
    "href": "Bash.html#comandos-b√°sicos",
    "title": "1¬† Recordatorio de pasos en Bash",
    "section": "1.2 Comandos b√°sicos",
    "text": "1.2 Comandos b√°sicos\n\n\n\n\n\n\n\n\nComandos\nInformaci√≥n\nArgumentos\n\n\n\n\nssh\nConexi√≥n a servidores\nssh usuario@servidor.mx\n\n\nls\nObservar el contenido de los archivos en una carpeta\nls directorio/\n\n\ncd\nMoverse de directorios\ncd /home/usuario/data/\n\n\nmkdir\nCrear un nuevo directorio\nmkdir data\n\n\nrmdir\nEliminar el directorio\nrmkdir -rf data\n\n\nnano/vim\nEditores de texto plano\nnano Archivo.txt / vim Archivo.txt\n\n\ncp\nCopiar archivos\ncp Archivo1.txt /home/usuario/data/\n\n\nmv\nMover un archivo o carpeta\n\n\n\necho\nPara llamar y/o declarar variables\necho ‚ÄúHello world‚Äù\n\n\nchmod\nCambiar permisos del usuario\nchmod 777 data/\n\n\nrsync\nDescargar o subir archivos\n\n\n\nscp\nDescargar o subir archivos"
  },
  {
    "objectID": "intro.html#objetivo-de-este-mini-curso",
    "href": "intro.html#objetivo-de-este-mini-curso",
    "title": "2¬† Introducci√≥n a Git / GitHub",
    "section": "2.1 Objetivo de este mini curso: üìå",
    "text": "2.1 Objetivo de este mini curso: üìå\n\n2.1.1 Hacia una biolog√≠a computacional m√°s reproducible, transparente y colaborativa üíú\n\n\n\n\n\n\nTip\n\n\n\n‚ÄúLos hechos individuales no reproducibles no tienen ninguna importancia para la ciencia‚Äù\nKarl Popper"
  },
  {
    "objectID": "intro.html#por-qu√©-hacer-control-de-versiones-de-nuestros-proyectos",
    "href": "intro.html#por-qu√©-hacer-control-de-versiones-de-nuestros-proyectos",
    "title": "2¬† Introducci√≥n a Git / GitHub",
    "section": "2.2 ¬øPor qu√© hacer control de versiones de nuestros proyectos?",
    "text": "2.2 ¬øPor qu√© hacer control de versiones de nuestros proyectos?\n\n‚úÖ Los proyectos suelen cambiar y crecer.\nüíæ Es d√≠ficil saber cu√°les fueron todos los cambios a lo largo del tiempo (en especial tiempos largos, hazlo por tu yo del futuro!).\nü§î Las colaboraciones se pueden complicar sin un buen control de versiones.\nüîê Seguridad.\n\n\n\n\n‚ÄúnotFinal.doc‚Äù by Jorge Cham, https://www.phdcomics.com"
  },
  {
    "objectID": "intro.html#git",
    "href": "intro.html#git",
    "title": "2¬† Introducci√≥n a Git / GitHub",
    "section": "2.3 Git",
    "text": "2.3 Git\nGit es un sistema de control de versiones distribuido, gratuito y de c√≥digo abierto, dise√±ado para manejar todo tipo de proyectos, desde los m√°s peque√±os hasta los m√°s grandes, con rapidez y eficiencia.\nGit es f√°cil de aprender y ocupa poco espacio con un rendimiento rapid√≠simo. Supera a las herramientas SCM como Subversion, CVS, Perforce y ClearCase con caracter√≠sticas como la ramificaci√≥n local barata, las c√≥modas √°reas de preparaci√≥n y los m√∫ltiples flujos de trabajo.\nEn resumen:\n\nGit es un sistema de control de versiones\nGit funciona con GitHub, Bitbucket o GitLab"
  },
  {
    "objectID": "intro.html#git-vs-controles-de-versi√≥n-a-mano",
    "href": "intro.html#git-vs-controles-de-versi√≥n-a-mano",
    "title": "2¬† Introducci√≥n a Git / GitHub",
    "section": "2.4 Git vs controles de versi√≥n a mano",
    "text": "2.4 Git vs controles de versi√≥n a mano\n\n\n\n\n\nCon Git cada contribuidor tiene una copia del repositorio central, con todos los archivos y la historia de los cambios por los que han pasado."
  },
  {
    "objectID": "intro.html#recomendaciones-para-sus-proyectos",
    "href": "intro.html#recomendaciones-para-sus-proyectos",
    "title": "2¬† Introducci√≥n a Git / GitHub",
    "section": "2.5 Recomendaciones para sus proyectos",
    "text": "2.5 Recomendaciones para sus proyectos\n\nDedicar un directorio exclusivo por proyecto.\nEs mejor organizarlo en un RStudio Project.\nHacer un repositorio de Git.\nTrabajen como siempre, solo adem√°s de guardar, recuerden hacer commit\nDe vez en vez hagan push de sus cambios cuando los hayan verificado."
  },
  {
    "objectID": "intro.html#proyectos-colaborativos",
    "href": "intro.html#proyectos-colaborativos",
    "title": "2¬† Introducci√≥n a Git / GitHub",
    "section": "2.6 10.5 Proyectos colaborativos",
    "text": "2.6 10.5 Proyectos colaborativos\n\nGitHub se parece m√°s a un GoogleDoc que a un Word Document.\nEs f√°cil que los colaboradores hagan cambios y tambi√©n es f√°cil saber qui√©n hizo que.\nEl owner del proyecto puede dar permisos a los diferentes colaboradores.\nTambi√©n existen organizaciones, esto puede ser √∫til para manejar los permisos de grupos grandes de colaboraci√≥n."
  },
  {
    "objectID": "intro.html#github",
    "href": "intro.html#github",
    "title": "2¬† Introducci√≥n a Git / GitHub",
    "section": "2.7 GitHub",
    "text": "2.7 GitHub\nGitHub es una plataforma para guardar proyectos, hace uso de Git. Su principal utilidad es para generar c√≥digo fuente de programas.\nTambi√©n existen otras plataformas como Bitbucked y GitLab, las cuales funcionan de manera similar a GitHub."
  },
  {
    "objectID": "intro.html#manual-de-sobreviviencia-con-git-y-github-en-rstudio-en-caso-de-ser-necesario",
    "href": "intro.html#manual-de-sobreviviencia-con-git-y-github-en-rstudio-en-caso-de-ser-necesario",
    "title": "2¬† Introducci√≥n a Git / GitHub",
    "section": "2.8 Manual de sobreviviencia con Git Y GitHub en RStudio (en caso de ser necesario)",
    "text": "2.8 Manual de sobreviviencia con Git Y GitHub en RStudio (en caso de ser necesario)\n\nPor cualquier problema con la conexi√≥n entre RStudio y Git, siempre ten en cuenta la ubicaci√≥n de d√≥nde se instal√≥ Git.\n\nPuedes usar en la terminal which git (Mac y Linux)\nO bien usar en la terminal where git (Windows)\n\nRecuerda que la terminal (l√≠nea de comandos, consola, shell o bash) es un programa en tu computadora que funciona para correr otros programas. Desde RStudio puedes abrir la terminal, lo cual es muy conveniente si est√°s trabajando en un proyecto. Puedes abrir una terminal con:\n\nTools &gt; Terminal (abre la terminal dentro del IDE de RStudio)\nTools &gt; Shell (abre una terminal externa a RStudio) &gt; Apply &gt; OK"
  },
  {
    "objectID": "intro.html#clonar-un-repositorio-y-tener-conexi√≥npermisos-para-modificarlo",
    "href": "intro.html#clonar-un-repositorio-y-tener-conexi√≥npermisos-para-modificarlo",
    "title": "2¬† Introducci√≥n a Git / GitHub",
    "section": "2.9 Clonar un repositorio y tener conexi√≥n/permisos para modificarlo",
    "text": "2.9 Clonar un repositorio y tener conexi√≥n/permisos para modificarlo\n\nGit puede comunicarse con un servidor remoto usando uno de dos protocolos, HTTPS o SSH, y cada protocolo usa credenciales diferentes.\nLa recomendaci√≥n actual de GitHub es usar HTTPS porque es la manera m√°s f√°cil de configurar y tiene operatividad en m√∫ltiples redes y plataformas.\n\nEs menos probable que HTTPS sea bloqueado por un firewall.\nUna conexi√≥n HTTPS permite que credential.helper almacene en cach√© su contrase√±a. (por tanto puedes configurar tu usuario y contrase√±a en tu equipo de uso).\nEs m√°s sencillo acceder a un repositorio desde cualquier lugar, ya que solo necesitas los detalles de tu cuenta (no se requieren claves SSH) para escribir en el repositorio.\n\nUsualmente cuando inicies un proyecto colaborativo con GitHub inicializa el repositorio con un README. Copia el HTTPS URL para clonar el repositorio en la terminal git clone https://github.com/TU-USUARIO/TU-REPOSITORIO.git."
  },
  {
    "objectID": "intro.html#referencias",
    "href": "intro.html#referencias",
    "title": "2¬† Introducci√≥n Sobre el Workshop",
    "section": "2.1 Referencias",
    "text": "2.1 Referencias\nNo olvides las referencias"
  },
  {
    "objectID": "GitBash.html#referencia",
    "href": "GitBash.html#referencia",
    "title": "3¬† Instalar Git Bash en Windows",
    "section": "3.1 Referencia",
    "text": "3.1 Referencia\n\nGuia de instalacion de Git Bash"
  },
  {
    "objectID": "Parte1.html#paso-1.-generar-una-llave-p√∫blica",
    "href": "Parte1.html#paso-1.-generar-una-llave-p√∫blica",
    "title": "4¬† Conectar a GitHub con SSH",
    "section": "4.1 Paso 1. Generar una llave p√∫blica",
    "text": "4.1 Paso 1. Generar una llave p√∫blica\n\n\n\n\n\n\nActividad (15 min)\n\n\n\nDeberan contar con:\n\nUna cuenta en GitHub\nR y RStudio actualizados\nGit instalado\nColoca en la terminal la siguiente informaci√≥n para generar una clave con el mismo correo que usaste para registrar tu cuenta en GitHub.\nssh-keygen -t ed25519 -C \"your_email@example.com\"\nNOTA: Si no cuentas con ssh-keygen instalado, primero corre este c√≥digo.\nsudo apt-get install ssh-keygen\n\n\n\nCuando ejecutes el programa, te va a preguntar si quieres generar una frase, identificar y como quieres nombrar la llave. Si no quieres complicarte presiona 3 veces ENTER, hasta que te parezca una pantalla como al siguiente:\n\nPosteriormente, tendras una carpeta llamada .ssh/, entra en esa carpeta y tendras dos archivos, si no los renombraste tendran el nombre de id_ed25519.\n\nid_ed25519: llave local, no la vamos a usar. Tampoco la compartas.\nid_ed25519.pub : llave publica. La usaremos para copiarla en los servidores que usaremos.\n\nVamos a abrir la terminal y vamos a ver el contenido de la carpeta .ssh/:\nls .ssh/"
  },
  {
    "objectID": "Parte1.html#paso-2.-copiar-la-clave-ssh-p√∫blica",
    "href": "Parte1.html#paso-2.-copiar-la-clave-ssh-p√∫blica",
    "title": "4¬† Conectar a GitHub con SSH",
    "section": "4.2 Paso 2. Copiar la clave SSH p√∫blica",
    "text": "4.2 Paso 2. Copiar la clave SSH p√∫blica\n\nAccede a la terminal en tu computadora.\nCopia la clave SSH generada anteriormente usando el siguiente comando:\n\ncat ~/.ssh/id_ed25519.pub\nEste comando mostrar√° tu clave p√∫blica en la terminal.\n\nSelecciona y copia toda la clave que aparece en la terminal. Aseg√∫rate de copiar desde ssh-rsa hasta el final de tu correo electr√≥nico."
  },
  {
    "objectID": "Parte1.html#paso-3.-agregar-la-clave-ssh-a-tu-cuenta-de-github",
    "href": "Parte1.html#paso-3.-agregar-la-clave-ssh-a-tu-cuenta-de-github",
    "title": "4¬† Conectar a GitHub con SSH",
    "section": "4.3 Paso 3. Agregar la clave SSH a tu cuenta de GitHub",
    "text": "4.3 Paso 3. Agregar la clave SSH a tu cuenta de GitHub\n\nInicia sesi√≥n en GitHub en tu navegador.\nHaz clic en tu foto de perfil en la esquina superior derecha y selecciona ‚ÄúSettings‚Äù (Configuraci√≥n).\nEn el men√∫ lateral izquierdo, selecciona ‚ÄúSSH and GPG keys‚Äù.\nHaz clic en el bot√≥n verde ‚ÄúNew SSH key‚Äù.\nEn el campo ‚ÄúTitle‚Äù, ingresa un nombre descriptivo para tu clave (por ejemplo, ‚ÄúMi computadora personal‚Äù).\nEn el campo ‚ÄúKey‚Äù, pega la clave SSH que copiaste previamente de la terminal.\nHaz clic en ‚ÄúAdd SSH key‚Äù para guardar la clave."
  },
  {
    "objectID": "Parte1.html#paso-4.-configurar-rstudio-para-usar-git-bash-como-terminal",
    "href": "Parte1.html#paso-4.-configurar-rstudio-para-usar-git-bash-como-terminal",
    "title": "4¬† Conectar a GitHub con SSH",
    "section": "4.4 Paso 4. Configurar RStudio para usar Git Bash como terminal",
    "text": "4.4 Paso 4. Configurar RStudio para usar Git Bash como terminal\n\nAbre RStudio.\nDir√≠gete a Tools (Herramientas) en la barra superior y selecciona Global Options (Opciones globales).\nEn el men√∫ de opciones globales, selecciona la pesta√±a Terminal.\nEn el campo New terminal open with, selecciona Git Bash.\n\nHaz clic en Apply y luego en OK."
  },
  {
    "objectID": "Parte1.html#paso-5.-abrir-la-terminal-de-git-bash-en-rstudio",
    "href": "Parte1.html#paso-5.-abrir-la-terminal-de-git-bash-en-rstudio",
    "title": "4¬† Conectar a GitHub con SSH",
    "section": "4.5 Paso 5. Abrir la terminal de Git Bash en RStudio",
    "text": "4.5 Paso 5. Abrir la terminal de Git Bash en RStudio\nAhora, para abrir la terminal de Git Bash dentro de RStudio, solo tienes que:\n\nIr al Tools , hacer clic en Terminal y en abrir New terminal.\nDeber√≠as ver que se abre una nueva sesi√≥n con Git Bash como la terminal predeterminada."
  },
  {
    "objectID": "Parte1.html#paso-6.-verificar-la-conexi√≥n",
    "href": "Parte1.html#paso-6.-verificar-la-conexi√≥n",
    "title": "4¬† Conectar a GitHub con SSH",
    "section": "4.6 Paso 6. Verificar la conexi√≥n",
    "text": "4.6 Paso 6. Verificar la conexi√≥n\nVuelve a la terminal y ejecuta el siguiente comando para verificar que tu clave SSH est√° correctamente configurada con GitHub:\nssh -T git@github.com\nEn caso de que se necesite, puedes especificar la llave que usaste:\nssh -i ~/.ssh/id_ed25519.pub -T git@github.com\nEl comando ssh -T git@github.com simplemente verifica que tu clave privada se est√° usando correctamente y que tu clave p√∫blica ha sido registrada en GitHub.\nSi es la primera vez que te conectas a GitHub con SSH, puede que veas un mensaje que te pregunte si deseas continuar conect√°ndote. Escribe ‚Äúyes‚Äù.\nSi todo est√° bien configurado, deber√≠as ver un mensaje similar a este:\nHi username! You've successfully authenticated, but GitHub does not provide shell access.\nEsto confirmar√° que tu clave SSH se ha agregado correctamente a tu cuenta de GitHub y que la conexi√≥n es exitosa.\n\n4.6.1 Soluci√≥n a Error de Configuraci√≥n de Usuario en Git\nEl comando git config se utiliza para configurar opciones en Git, y los siguientes comandos en particular se usan para establecer tu nombre y correo electr√≥nico globalmente en tu configuraci√≥n de Git:\ngit config --global user.email \"you@example.com\"\ngit config --global user.name \"Your Name\"\n\ngit config --global user.email \"you@example.com\"\n\nEste comando configura tu direcci√≥n de correo electr√≥nico, la cual ser√° utilizada en todos tus commits de Git. El correo electr√≥nico asociado con los commits es importante porque ayuda a identificar qui√©n realiz√≥ qu√© cambios en el repositorio. ‚Äìglobal significa que esta configuraci√≥n se aplicar√° a todos los repositorios en tu m√°quina.\n\ngit config --global user.name \"Your Name\"\n\nEste comando establece tu nombre de usuario, que tambi√©n se asociar√° con los commits que realices. Al igual que el correo electr√≥nico, se utilizar√° en todos tus commits en cualquier repositorio de Git en tu m√°quina."
  },
  {
    "objectID": "Parte1.html#referencias",
    "href": "Parte1.html#referencias",
    "title": "4¬† Conectar a GitHub con SSH",
    "section": "4.7 Referencias",
    "text": "4.7 Referencias\n\nHaydee tutorial: Temas Selectos de An√°lisis Num√©rico y Computaci√≥n Cient√≠fica: Computo cient√≠fico para el an√°lisis de datos\nAlejandra Medina tutorial: Control de versiones con GitHub y RStudio"
  },
  {
    "objectID": "Parte2.html#github-primero-rstudio-despu√©s",
    "href": "Parte2.html#github-primero-rstudio-despu√©s",
    "title": "5¬† Comandos usados en Github y RStudio",
    "section": "5.1 GitHub primero, RStudio despu√©s‚Ä¶",
    "text": "5.1 GitHub primero, RStudio despu√©s‚Ä¶\n\nCrea un repositorio en GitHub: mi_repositorio &gt; Public &gt; YES initialize this repository with a README &gt; clicken el gran bot√≥n verde ‚ÄúCreate repository‚Äù\nEn RStudio crea un nuevo proyecto: File &gt; New Project &gt; Version Control &gt; Git. Ahi pega el URL del repositorio https://github.com/mi_usuario/mi_repositorio.git. Da click en Create Project.\n\nEsto nos generar√° los siguientes elementos:\n\nUn directorio nuevo\nUn repositorio Git enlazado a al repositorio de GitHub\nUn proyecto en RStudio\n\nCon este procedimiento ya no es necesario preocuparse por configurar controles remotos Git y rastrear ramas en la l√≠nea de comandos."
  },
  {
    "objectID": "Parte2.html#comentar-pull-y-push-en-rstudio",
    "href": "Parte2.html#comentar-pull-y-push-en-rstudio",
    "title": "5¬† Comandos usados en Github y RStudio",
    "section": "5.2 Comentar, pull y push en Rstudio",
    "text": "5.2 Comentar, pull y push en Rstudio\n\n\n\n\n\nCon la flecha azul podemos hacer pull (RECUERDA HACERLO ANTES DE HACER UN PUSH), y con la flecha verde un push. Para poder comentar y hacer push debemos marcar con una palomita mediante un click en las peque√±as cajas blancas de la columna Staged, damos click en commit lo cual nos abre la siguiente ventana.\n\nVolvemos a dar click en commit, y finalizamos con push (flecha verde)."
  },
  {
    "objectID": "Parte2.html#pagina-de-inicio-en-github",
    "href": "Parte2.html#pagina-de-inicio-en-github",
    "title": "5¬† Comandos usados en Github y RStudio",
    "section": "5.3 Pagina de inicio en GitHub",
    "text": "5.3 Pagina de inicio en GitHub\n\n\n\n\n\n\nActividad\n\n\n\n\nEn GitHub, crea un repositorio con el mismo nombre de usuario. Ejemplo: Mi usuario es EveliaCoss y mi repositorio se llama EveliaCoss, dandome la siguiente liga https://github.com/EveliaCoss/EveliaCoss\nAgrega un README al repositorio con tu informacion. Por Default ya trae una plantilla, modificala y adaptala a tu gusto.\nVisualiza como cambia tu inicio en el Github.\nSincroniza el GitHub en RStudio y realiza los cambios desde ahi."
  },
  {
    "objectID": "Parte2.html#referencias",
    "href": "Parte2.html#referencias",
    "title": "5¬† Comandos usados en Github y RStudio",
    "section": "5.4 Referencias",
    "text": "5.4 Referencias\n\nHaydee tutorial: Temas Selectos de An√°lisis Num√©rico y Computaci√≥n Cient√≠fica: Computo cient√≠fico para el an√°lisis de datos\nAlejandra Medina tutorial: Control de versiones con GitHub y RStudio"
  },
  {
    "objectID": "Parte3.html#materiales-informativos",
    "href": "Parte3.html#materiales-informativos",
    "title": "6¬† Buenas practicas en R",
    "section": "6.1 Materiales informativos",
    "text": "6.1 Materiales informativos\n\nCurso de Joselyn Cristina Ch√°vez Fuentes\nMe ayudo mucho este Video\nDocumentaci√≥n de funciones de Andr√©s Arredondo Cruz\n\nüí™ Estuve muy intensa viendo su codigo. Muchas gracias por tenerlos publico."
  },
  {
    "objectID": "Parte3.html#un-algoritmo-nos-permite-resolver-un-problema",
    "href": "Parte3.html#un-algoritmo-nos-permite-resolver-un-problema",
    "title": "6¬† Buenas practicas en R",
    "section": "6.2 Un algoritmo nos permite resolver un problema ‚≠ê",
    "text": "6.2 Un algoritmo nos permite resolver un problema ‚≠ê\nUn algoritmo es un m√©todo para resolver un problema mediante una serie de pasos definidos, precisos y finitos.\n\nDefinido: si se sigue dos veces, se obtiene el mismo resultado. Es reproducible.\nPreciso: implica el orden de realizaci√≥n de cada uno de los pasos.\nFinito: Tiene un numero determinado de pasos, implica que tiene un fin.\n\n\nUn algoritmo podemos definirlo como un programa o software."
  },
  {
    "objectID": "Parte3.html#para-escribir-un-buen-software-necesitas",
    "href": "Parte3.html#para-escribir-un-buen-software-necesitas",
    "title": "6¬† Buenas practicas en R",
    "section": "6.3 Para escribir un buen software necesitas:",
    "text": "6.3 Para escribir un buen software necesitas:\n\nEscribir c√≥digo mantenible (maintainable code), usar control de versiones (version control) y rastreadores de problemas (issue trackers), revisiones de c√≥digo (code reviews), pruebas unitarias (unit testing) y automatizaci√≥n de tareas (task automation).\nWilson, et al.¬†2014. PLOS Biology\n\nCon el fin de¬†previnir retracciones.\n\n\n\n\n\n\nPasos para escribir un buen software\n\n\n\n\nAn√°lisis del problema / Definir el problema\nDise√±o del algoritmo / Dise√±o del programa\nCodificaci√≥n / Escribir el c√≥digo\nCompilaci√≥n y ejecuci√≥n del programa\nVerificaci√≥n / Realizar pruebas\nDepuraci√≥n / Detectar los errores y corregirlos\n\n\nProgramacion defensiva\n\n\nDocumentaci√≥n"
  },
  {
    "objectID": "Parte3.html#paso-7-documentaci√≥n",
    "href": "Parte3.html#paso-7-documentaci√≥n",
    "title": "6¬† Buenas practicas en R",
    "section": "6.4 Paso 7: Documentaci√≥n",
    "text": "6.4 Paso 7: Documentaci√≥n\n\n\n\n\n\n\nNote\n\n\n\n\nAutor (author): Su nombre\nDia (date): Fecha de creaci√≥n\nPaquetes (packages)\nDirectorio de trabajo (Working directory): En que carpeta se encuentra tu datos y programa.\nInformaci√≥n descriptiva del programa (Description): ¬øPara qu√© sirve el programa? Ej: El siguiente programa realiza la suma de dos numeros enteros a partir de la entrada del usuario y posteriormente la imprime en pantalla.\nUsage ¬øC√≥mo se utiliza?\nArgumentos (Arguments)\n\nInformaci√≥n de entrada (Data Inputs): Ej: Solo numeros enteros (sin decimales).\nInformaci√≥n de salida (Outpus): Graficas, figuras, tablas, etc."
  },
  {
    "objectID": "Parte3.html#puntos-claves-para-buenas-practicas-en-bioinfo",
    "href": "Parte3.html#puntos-claves-para-buenas-practicas-en-bioinfo",
    "title": "6¬† Buenas practicas en R",
    "section": "6.5 Puntos claves para buenas practicas en bioinfo ‚≠ê",
    "text": "6.5 Puntos claves para buenas practicas en bioinfo ‚≠ê\n\nEscriba programas para personas, no para computadoras (Documenta qu√© hace y por qu√©). - Se coherente en la nomenclatura, indentaci√≥n y otros aspectos del estilo.\nDivide los programas en funciones cortas de un solo prop√≥sito. üíª üìö\nNo repitas tu c√≥digo. Crea pasos reproducibles o que se repitan por si solas. ‚û∞\nPlanifique los errores (Programacion defensiva) üö©\nOptimice el software s√≥lo despu√©s de que funcione correctamente. - Si funciona no lo modifiques, simplificalo.\nColaborar - Busque siempre bibliotecas de software bien mantenidas que hagan lo que necesita. üë•\n\n\n\n\n\n\n\nEjemplo de como realizo mis documentos üíú\n\n\n\nAqui les dejo el script que les doy a mis alumnos VisualizacionDatos.R del curso de An√°lisis de datos de RNA-Seq."
  },
  {
    "objectID": "Parte3.html#pagina-web-en-github",
    "href": "Parte3.html#pagina-web-en-github",
    "title": "6¬† Buenas practicas en R",
    "section": "6.6 Pagina web en GitHub",
    "text": "6.6 Pagina web en GitHub\n\n\n\n\n\n\nActividad\n\n\n\n\nEn GitHub, crea un repositorio con el mismo nombre de usuario y agregale ‚Äú.github.io‚Äù. Ejemplo: Mi usuario es EveliaCoss y mi repositorio se llama ‚ÄúEveliaCoss.github.io‚Äù, dandome la siguiente liga https://github.com/EveliaCoss/EveliaCoss.github.io\nDescarga el archivo index.Rmd y modificalo con tu informacion en tu repositorio.\nNo olvides sincronizar el GitHub en RStudio y realiza los cambios desde ahi.\nEn GitHub, convierte en pagina web tu repositorio en Settings &gt; Pages &gt; Branch cambia a Main y root &gt; Save"
  },
  {
    "objectID": "Parte3.html#top-github-users-by-public-contributions-in-mexico",
    "href": "Parte3.html#top-github-users-by-public-contributions-in-mexico",
    "title": "6¬† Buenas practicas en R",
    "section": "6.7 Top GitHub Users By Public Contributions in Mexico",
    "text": "6.7 Top GitHub Users By Public Contributions in Mexico"
  },
  {
    "objectID": "Parte3.html#referencias",
    "href": "Parte3.html#referencias",
    "title": "6¬† Buenas practicas en R",
    "section": "6.8 Referencias",
    "text": "6.8 Referencias\n\nHaydee tutorial: Temas Selectos de An√°lisis Num√©rico y Computaci√≥n Cient√≠fica: Computo cient√≠fico para el an√°lisis de datos\nAlejandra Medina tutorial: Control de versiones con GitHub y RStudio\nWilson, et al.¬†2014. Best Practices for Scientific Computing. PLOS Biology\nEvelia Coss - tutorial Buenas practicas en R\nEvelia Coss - Make your CV tutorial"
  },
  {
    "objectID": "Cap1.html#preparaci√≥n-del-directorio-de-trabajo",
    "href": "Cap1.html#preparaci√≥n-del-directorio-de-trabajo",
    "title": "1¬† Recordatorio de pasos en Bash",
    "section": "1.1 Preparaci√≥n del directorio de trabajo",
    "text": "1.1 Preparaci√≥n del directorio de trabajo\n\nRuta / Camino absoluto\ncd /home/usuario/data/\nRuta / Camino relativo\ncd ../ # Ir a la carpeta anterior"
  },
  {
    "objectID": "Cap1.html#comandos-b√°sicos",
    "href": "Cap1.html#comandos-b√°sicos",
    "title": "1¬† Recordatorio de pasos en Bash",
    "section": "1.2 Comandos b√°sicos",
    "text": "1.2 Comandos b√°sicos\n\n\n\n\n\n\n\n\nComandos\nInformaci√≥n\nArgumentos\n\n\n\n\nssh\nConexi√≥n a servidores\nssh usuario@servidor.mx\n\n\nls\nObservar el contenido de los archivos en una carpeta\nls directorio/\n\n\ncd\nMoverse de directorios\ncd /home/usuario/data/\n\n\nmkdir\nCrear un nuevo directorio\nmkdir data\n\n\nrmdir\nEliminar el directorio\nrmkdir -rf data\n\n\nnano/vim\nEditores de texto plano\nnano Archivo.txt / vim Archivo.txt\n\n\ncp\nCopiar archivos\ncp Archivo1.txt /home/usuario/data/\n\n\nmv\nMover un archivo o carpeta\n\n\n\necho\nPara llamar y/o declarar variables\necho ‚ÄúHello world‚Äù\n\n\nchmod\nCambiar permisos del usuario\nchmod 777 data/\n\n\nrsync\nDescargar o subir archivos\n\n\n\nscp\nDescargar o subir archivos"
  },
  {
    "objectID": "Cap2.html#referencia",
    "href": "Cap2.html#referencia",
    "title": "3¬† Instalar Git Bash en Windows",
    "section": "3.1 Referencia",
    "text": "3.1 Referencia\n\nGuia de instalacion de Git Bash"
  },
  {
    "objectID": "Cap3.html#paso-1.-generar-una-llave-p√∫blica",
    "href": "Cap3.html#paso-1.-generar-una-llave-p√∫blica",
    "title": "4¬† Conectar a GitHub con SSH",
    "section": "4.1 Paso 1. Generar una llave p√∫blica",
    "text": "4.1 Paso 1. Generar una llave p√∫blica\n\n\n\n\n\n\nActividad (15 min)\n\n\n\nDeberan contar con:\n\nUna cuenta en GitHub\nR y RStudio actualizados\nGit instalado\nColoca en la terminal la siguiente informaci√≥n para generar una clave con el mismo correo que usaste para registrar tu cuenta en GitHub.\nssh-keygen -t ed25519 -C \"your_email@example.com\"\nNOTA: Si no cuentas con ssh-keygen instalado, primero corre este c√≥digo.\nsudo apt-get install ssh-keygen\n\n\n\nCuando ejecutes el programa, te va a preguntar si quieres generar una frase, identificar y como quieres nombrar la llave. Si no quieres complicarte presiona 3 veces ENTER, hasta que te parezca una pantalla como al siguiente:\n\nPosteriormente, tendras una carpeta llamada .ssh/, entra en esa carpeta y tendras dos archivos, si no los renombraste tendran el nombre de id_ed25519.\n\nid_ed25519: llave local, no la vamos a usar. Tampoco la compartas.\nid_ed25519.pub : llave publica. La usaremos para copiarla en los servidores que usaremos.\n\nVamos a abrir la terminal y vamos a ver el contenido de la carpeta .ssh/:\nls .ssh/"
  },
  {
    "objectID": "Cap3.html#paso-2.-copiar-la-clave-ssh-p√∫blica",
    "href": "Cap3.html#paso-2.-copiar-la-clave-ssh-p√∫blica",
    "title": "4¬† Conectar a GitHub con SSH",
    "section": "4.2 Paso 2. Copiar la clave SSH p√∫blica",
    "text": "4.2 Paso 2. Copiar la clave SSH p√∫blica\n\nAccede a la terminal en tu computadora.\nCopia la clave SSH generada anteriormente usando el siguiente comando:\n\ncat ~/.ssh/id_ed25519.pub\nEste comando mostrar√° tu clave p√∫blica en la terminal.\n\nSelecciona y copia toda la clave que aparece en la terminal. Aseg√∫rate de copiar desde ssh-rsa hasta el final de tu correo electr√≥nico."
  },
  {
    "objectID": "Cap3.html#paso-3.-agregar-la-clave-ssh-a-tu-cuenta-de-github",
    "href": "Cap3.html#paso-3.-agregar-la-clave-ssh-a-tu-cuenta-de-github",
    "title": "4¬† Conectar a GitHub con SSH",
    "section": "4.3 Paso 3. Agregar la clave SSH a tu cuenta de GitHub",
    "text": "4.3 Paso 3. Agregar la clave SSH a tu cuenta de GitHub\n\nInicia sesi√≥n en GitHub en tu navegador.\nHaz clic en tu foto de perfil en la esquina superior derecha y selecciona ‚ÄúSettings‚Äù (Configuraci√≥n).\nEn el men√∫ lateral izquierdo, selecciona ‚ÄúSSH and GPG keys‚Äù.\nHaz clic en el bot√≥n verde ‚ÄúNew SSH key‚Äù.\nEn el campo ‚ÄúTitle‚Äù, ingresa un nombre descriptivo para tu clave (por ejemplo, ‚ÄúMi computadora personal‚Äù).\nEn el campo ‚ÄúKey‚Äù, pega la clave SSH que copiaste previamente de la terminal.\nHaz clic en ‚ÄúAdd SSH key‚Äù para guardar la clave."
  },
  {
    "objectID": "Cap3.html#paso-4.-configurar-rstudio-para-usar-git-bash-como-terminal",
    "href": "Cap3.html#paso-4.-configurar-rstudio-para-usar-git-bash-como-terminal",
    "title": "4¬† Conectar a GitHub con SSH",
    "section": "4.4 Paso 4. Configurar RStudio para usar Git Bash como terminal",
    "text": "4.4 Paso 4. Configurar RStudio para usar Git Bash como terminal\n\nAbre RStudio.\nDir√≠gete a Tools (Herramientas) en la barra superior y selecciona Global Options (Opciones globales).\nEn el men√∫ de opciones globales, selecciona la pesta√±a Terminal.\nEn el campo New terminal open with, selecciona Git Bash.\n\nHaz clic en Apply y luego en OK."
  },
  {
    "objectID": "Cap3.html#paso-5.-abrir-la-terminal-de-git-bash-en-rstudio",
    "href": "Cap3.html#paso-5.-abrir-la-terminal-de-git-bash-en-rstudio",
    "title": "4¬† Conectar a GitHub con SSH",
    "section": "4.5 Paso 5. Abrir la terminal de Git Bash en RStudio",
    "text": "4.5 Paso 5. Abrir la terminal de Git Bash en RStudio\nAhora, para abrir la terminal de Git Bash dentro de RStudio, solo tienes que:\n\nIr al Tools , hacer clic en Terminal y en abrir New terminal.\nDeber√≠as ver que se abre una nueva sesi√≥n con Git Bash como la terminal predeterminada."
  },
  {
    "objectID": "Cap3.html#paso-6.-verificar-la-conexi√≥n",
    "href": "Cap3.html#paso-6.-verificar-la-conexi√≥n",
    "title": "4¬† Conectar a GitHub con SSH",
    "section": "4.6 Paso 6. Verificar la conexi√≥n",
    "text": "4.6 Paso 6. Verificar la conexi√≥n\nVuelve a la terminal y ejecuta el siguiente comando para verificar que tu clave SSH est√° correctamente configurada con GitHub:\nssh -T git@github.com\nEn caso de que se necesite, puedes especificar la llave que usaste:\nssh -i ~/.ssh/id_ed25519.pub -T git@github.com\nEl comando ssh -T git@github.com simplemente verifica que tu clave privada se est√° usando correctamente y que tu clave p√∫blica ha sido registrada en GitHub.\nSi es la primera vez que te conectas a GitHub con SSH, puede que veas un mensaje que te pregunte si deseas continuar conect√°ndote. Escribe ‚Äúyes‚Äù.\nSi todo est√° bien configurado, deber√≠as ver un mensaje similar a este:\nHi username! You've successfully authenticated, but GitHub does not provide shell access.\nEsto confirmar√° que tu clave SSH se ha agregado correctamente a tu cuenta de GitHub y que la conexi√≥n es exitosa.\n\n4.6.1 Soluci√≥n a Error de Configuraci√≥n de Usuario en Git\nEl comando git config se utiliza para configurar opciones en Git, y los siguientes comandos en particular se usan para establecer tu nombre y correo electr√≥nico globalmente en tu configuraci√≥n de Git:\ngit config --global user.email \"you@example.com\"\ngit config --global user.name \"Your Name\"\n\ngit config --global user.email \"you@example.com\"\n\nEste comando configura tu direcci√≥n de correo electr√≥nico, la cual ser√° utilizada en todos tus commits de Git. El correo electr√≥nico asociado con los commits es importante porque ayuda a identificar qui√©n realiz√≥ qu√© cambios en el repositorio. ‚Äìglobal significa que esta configuraci√≥n se aplicar√° a todos los repositorios en tu m√°quina.\n\ngit config --global user.name \"Your Name\"\n\nEste comando establece tu nombre de usuario, que tambi√©n se asociar√° con los commits que realices. Al igual que el correo electr√≥nico, se utilizar√° en todos tus commits en cualquier repositorio de Git en tu m√°quina."
  },
  {
    "objectID": "Cap3.html#referencias",
    "href": "Cap3.html#referencias",
    "title": "4¬† Conectar a GitHub con SSH",
    "section": "4.7 Referencias",
    "text": "4.7 Referencias\n\nHaydee tutorial: Temas Selectos de An√°lisis Num√©rico y Computaci√≥n Cient√≠fica: Computo cient√≠fico para el an√°lisis de datos\nAlejandra Medina tutorial: Control de versiones con GitHub y RStudio"
  },
  {
    "objectID": "Cap4.html#github-primero-rstudio-despu√©s",
    "href": "Cap4.html#github-primero-rstudio-despu√©s",
    "title": "5¬† Comandos usados en Github y RStudio",
    "section": "5.1 GitHub primero, RStudio despu√©s‚Ä¶",
    "text": "5.1 GitHub primero, RStudio despu√©s‚Ä¶\n\nCrea un repositorio en GitHub: mi_repositorio &gt; Public &gt; YES initialize this repository with a README &gt; clicken el gran bot√≥n verde ‚ÄúCreate repository‚Äù\nEn RStudio crea un nuevo proyecto: File &gt; New Project &gt; Version Control &gt; Git. Ahi pega el URL del repositorio https://github.com/mi_usuario/mi_repositorio.git. Da click en Create Project.\n\nEsto nos generar√° los siguientes elementos:\n\nUn directorio nuevo\nUn repositorio Git enlazado a al repositorio de GitHub\nUn proyecto en RStudio\n\nCon este procedimiento ya no es necesario preocuparse por configurar controles remotos Git y rastrear ramas en la l√≠nea de comandos."
  },
  {
    "objectID": "Cap4.html#comentar-pull-y-push-en-rstudio",
    "href": "Cap4.html#comentar-pull-y-push-en-rstudio",
    "title": "5¬† Comandos usados en Github y RStudio",
    "section": "5.2 Comentar, pull y push en Rstudio",
    "text": "5.2 Comentar, pull y push en Rstudio\n\n\n\n\n\nCon la flecha azul podemos hacer pull (RECUERDA HACERLO ANTES DE HACER UN PUSH), y con la flecha verde un push. Para poder comentar y hacer push debemos marcar con una palomita mediante un click en las peque√±as cajas blancas de la columna Staged, damos click en commit lo cual nos abre la siguiente ventana.\n\nVolvemos a dar click en commit, y finalizamos con push (flecha verde)."
  },
  {
    "objectID": "Cap4.html#pagina-de-inicio-en-github",
    "href": "Cap4.html#pagina-de-inicio-en-github",
    "title": "5¬† Comandos usados en Github y RStudio",
    "section": "5.3 Pagina de inicio en GitHub",
    "text": "5.3 Pagina de inicio en GitHub\n\n\n\n\n\n\nActividad\n\n\n\n\nEn GitHub, crea un repositorio con el mismo nombre de usuario. Ejemplo: Mi usuario es EveliaCoss y mi repositorio se llama EveliaCoss, dandome la siguiente liga https://github.com/EveliaCoss/EveliaCoss\nAgrega un README al repositorio con tu informacion. Por Default ya trae una plantilla, modificala y adaptala a tu gusto.\nVisualiza como cambia tu inicio en el Github.\nSincroniza el GitHub en RStudio y realiza los cambios desde ahi."
  },
  {
    "objectID": "Cap4.html#referencias",
    "href": "Cap4.html#referencias",
    "title": "5¬† Comandos usados en Github y RStudio",
    "section": "5.4 Referencias",
    "text": "5.4 Referencias\n\nHaydee tutorial: Temas Selectos de An√°lisis Num√©rico y Computaci√≥n Cient√≠fica: Computo cient√≠fico para el an√°lisis de datos\nAlejandra Medina tutorial: Control de versiones con GitHub y RStudio"
  },
  {
    "objectID": "Cap5.html#materiales-informativos",
    "href": "Cap5.html#materiales-informativos",
    "title": "6¬† Buenas practicas en R",
    "section": "6.1 Materiales informativos",
    "text": "6.1 Materiales informativos\n\nCurso de Joselyn Cristina Ch√°vez Fuentes\nMe ayudo mucho este Video\nDocumentaci√≥n de funciones de Andr√©s Arredondo Cruz\n\nüí™ Estuve muy intensa viendo su codigo. Muchas gracias por tenerlos publico."
  },
  {
    "objectID": "Cap5.html#un-algoritmo-nos-permite-resolver-un-problema",
    "href": "Cap5.html#un-algoritmo-nos-permite-resolver-un-problema",
    "title": "6¬† Buenas practicas en R",
    "section": "6.2 Un algoritmo nos permite resolver un problema ‚≠ê",
    "text": "6.2 Un algoritmo nos permite resolver un problema ‚≠ê\nUn algoritmo es un m√©todo para resolver un problema mediante una serie de pasos definidos, precisos y finitos.\n\nDefinido: si se sigue dos veces, se obtiene el mismo resultado. Es reproducible.\nPreciso: implica el orden de realizaci√≥n de cada uno de los pasos.\nFinito: Tiene un numero determinado de pasos, implica que tiene un fin.\n\n\nUn algoritmo podemos definirlo como un programa o software."
  },
  {
    "objectID": "Cap5.html#para-escribir-un-buen-software-necesitas",
    "href": "Cap5.html#para-escribir-un-buen-software-necesitas",
    "title": "6¬† Buenas practicas en R",
    "section": "6.3 Para escribir un buen software necesitas:",
    "text": "6.3 Para escribir un buen software necesitas:\n\nEscribir c√≥digo mantenible (maintainable code), usar control de versiones (version control) y rastreadores de problemas (issue trackers), revisiones de c√≥digo (code reviews), pruebas unitarias (unit testing) y automatizaci√≥n de tareas (task automation).\nWilson, et al.¬†2014. PLOS Biology\n\nCon el fin de¬†previnir retracciones.\n\n\n\n\n\n\nPasos para escribir un buen software\n\n\n\n\nAn√°lisis del problema / Definir el problema\nDise√±o del algoritmo / Dise√±o del programa\nCodificaci√≥n / Escribir el c√≥digo\nCompilaci√≥n y ejecuci√≥n del programa\nVerificaci√≥n / Realizar pruebas\nDepuraci√≥n / Detectar los errores y corregirlos\n\n\nProgramacion defensiva\n\n\nDocumentaci√≥n"
  },
  {
    "objectID": "Cap5.html#paso-7-documentaci√≥n",
    "href": "Cap5.html#paso-7-documentaci√≥n",
    "title": "6¬† Buenas practicas en R",
    "section": "6.4 Paso 7: Documentaci√≥n",
    "text": "6.4 Paso 7: Documentaci√≥n\n\n\n\n\n\n\nNote\n\n\n\n\nAutor (author): Su nombre\nDia (date): Fecha de creaci√≥n\nPaquetes (packages)\nDirectorio de trabajo (Working directory): En que carpeta se encuentra tu datos y programa.\nInformaci√≥n descriptiva del programa (Description): ¬øPara qu√© sirve el programa? Ej: El siguiente programa realiza la suma de dos numeros enteros a partir de la entrada del usuario y posteriormente la imprime en pantalla.\nUsage ¬øC√≥mo se utiliza?\nArgumentos (Arguments)\n\nInformaci√≥n de entrada (Data Inputs): Ej: Solo numeros enteros (sin decimales).\nInformaci√≥n de salida (Outpus): Graficas, figuras, tablas, etc."
  },
  {
    "objectID": "Cap5.html#puntos-claves-para-buenas-practicas-en-bioinfo",
    "href": "Cap5.html#puntos-claves-para-buenas-practicas-en-bioinfo",
    "title": "6¬† Buenas practicas en R",
    "section": "6.5 Puntos claves para buenas practicas en bioinfo ‚≠ê",
    "text": "6.5 Puntos claves para buenas practicas en bioinfo ‚≠ê\n\nEscriba programas para personas, no para computadoras (Documenta qu√© hace y por qu√©). - Se coherente en la nomenclatura, indentaci√≥n y otros aspectos del estilo.\nDivide los programas en funciones cortas de un solo prop√≥sito. üíª üìö\nNo repitas tu c√≥digo. Crea pasos reproducibles o que se repitan por si solas. ‚û∞\nPlanifique los errores (Programacion defensiva) üö©\nOptimice el software s√≥lo despu√©s de que funcione correctamente. - Si funciona no lo modifiques, simplificalo.\nColaborar - Busque siempre bibliotecas de software bien mantenidas que hagan lo que necesita. üë•\n\n\n\n\n\n\n\nEjemplo de como realizo mis documentos üíú\n\n\n\nAqui les dejo el script que les doy a mis alumnos VisualizacionDatos.R del curso de An√°lisis de datos de RNA-Seq."
  },
  {
    "objectID": "Cap5.html#pagina-web-en-github",
    "href": "Cap5.html#pagina-web-en-github",
    "title": "6¬† Buenas practicas en R",
    "section": "6.6 Pagina web en GitHub",
    "text": "6.6 Pagina web en GitHub\n\n\n\n\n\n\nActividad\n\n\n\n\nEn GitHub, crea un repositorio con el mismo nombre de usuario y agregale ‚Äú.github.io‚Äù. Ejemplo: Mi usuario es EveliaCoss y mi repositorio se llama ‚ÄúEveliaCoss.github.io‚Äù, dandome la siguiente liga https://github.com/EveliaCoss/EveliaCoss.github.io\nDescarga el archivo index.Rmd y modificalo con tu informacion en tu repositorio.\nNo olvides sincronizar el GitHub en RStudio y realiza los cambios desde ahi.\nEn GitHub, convierte en pagina web tu repositorio en Settings &gt; Pages &gt; Branch cambia a Main y root &gt; Save"
  },
  {
    "objectID": "Cap5.html#top-github-users-by-public-contributions-in-mexico",
    "href": "Cap5.html#top-github-users-by-public-contributions-in-mexico",
    "title": "6¬† Buenas practicas en R",
    "section": "6.7 Top GitHub Users By Public Contributions in Mexico",
    "text": "6.7 Top GitHub Users By Public Contributions in Mexico"
  },
  {
    "objectID": "Cap5.html#referencias",
    "href": "Cap5.html#referencias",
    "title": "6¬† Buenas practicas en R",
    "section": "6.8 Referencias",
    "text": "6.8 Referencias\n\nHaydee tutorial: Temas Selectos de An√°lisis Num√©rico y Computaci√≥n Cient√≠fica: Computo cient√≠fico para el an√°lisis de datos\nAlejandra Medina tutorial: Control de versiones con GitHub y RStudio\nWilson, et al.¬†2014. Best Practices for Scientific Computing. PLOS Biology\nEvelia Coss - tutorial Buenas practicas en R\nEvelia Coss - Make your CV tutorial"
  }
]